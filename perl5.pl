#!/usr/bin/env perl
#!/usr/bin/perl
#!C:/strawberry/perl/bin/perl.exe


use Cwd;
my $pwd = getcwd();
my $logfile="$pwd\\wdaemon.log";


use strict;
use warnings;
use DBI;
use Opcon;
use Net::FTP;
use POSIX qw(strftime); #say strftime '%Y-%m-%d', gmtime(); # 2014-11-09
use File::Copy;
use Mail::Sender;
use Getopt::Long;
use Date::Calc qw (
    Delta_DHMS
    N_Delta_YMDHMS
    Add_Delta_YM
    Add_N_Delta_YMD
    Days_in_Month
    Add_Delta_YMD
    Today
    Week_of_Year
    Monday_of_Week
);
use Log::Log4perl qw(:easy);
Log::Log4perl->easy_init(
{
    # levels from low to high:
    #level => $DEBUG,
    level => $INFO,
    #level => $WARN,
    #level => $ERROR,
    #level => $FATAL,
    # file => ">> $logfile",
    file => 'stdout',
    mode => "append",
    layout => "%d %p> %m%n",
    }
);

my $FROM = "absender\@itsv.at";
my $SMTPD = "viruswall.sozvers.at";

 
$|=1; # Unbuffered STDOUT

# Parameter
GetOptions (
    'datenBank=s'   => \my $datenBank,
    'daysback=s'    => \my $daysback,
    'skddate=s'     => \my $skddate,
    'help'          => \my $help
);

my @ymd = split('-',$skddate);
$y = $ymd[0];$m = $ymd[1];$d=$ymd[2];


if ( ! defined $datenBank) { $datenBank = "prod"; }
INFO("Connecting to database");
my $dbh = dbh_connect("$datenBank");

$dbh = dbh_connect("prod");
my @pkvResources;
$sth = $dbh->prepare($sqlResources) or die "Can't prepare statement: $DBI::errstr";
$sth->execute() or die "Can't prepare statement: $DBI::errstr";
while ( @row = $sth->fetchrow_array  ) {
    $" = ";";
    push(@pkvResources,"@row");
}
#dbh_disconnect(); #$dbh->disconnect();

foreach my $koko (@pkvResources) {
    my @resource_vals = split(';|-',$koko);
    print "$resource_vals[2]"."=";
    #print "$resource_vals[1]/$resource_vals[0]";
    print "$resource_vals[1]";
    print " &nbsp; ";
}



##############################################################################
sub ftp {
##############################################################################
    my $DEBUG_LEVEL=9;
    my ($server) = @_;
    # Neues Net::FTP-Objekt erstellen
    print "Connecting to: \t$server ... \n";
    $ftp = Net::FTP->new(
        $server,
        Timeout => 360,
        Debug   => $DEBUG_LEVEL,
        );
    unless (defined $ftp) {
        printcolor("fail","Error: $! ");
        print "Can't create Net::FTP-Object\n";
        sleep(2);
        exit(2);
    }
    print "Login as: \t\t$USER ... \n";
    $ftp->login($USER,$PW) || printcolor("fail", "Can't login: $!") && exit(2);
    if ( defined $binary ) {
        print "binary mode \n";
        $ftp->binary();
    } elsif ( defined $ascii ) {
        print "ascii mode \n";
        $ftp->ascii();
    } elsif ( ! defined $ascii && ! defined $binary ) {
        printcolor("info","No definition of ascii and binary, so we use BINARY ");
        $ftp->binary();
    }
}

##############################################################################
sub mailit
##############################################################################
{
my ($TO,$SUBJECT,$MESSAGE) = @_;

my $sender;
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );


$sender->Open({
    to => $TO,
    #cc => 'somebody@somewhere.com',
    subject => $SUBJECT,
    }) or die "Can't open the message: $sender->{'error_msg'}\n";
$sender->SendLineEnc("$MESSAGE \n\n\n(This is an autogenerated message)\n-------------------------------------\nPlease reply to: rz.av.linz\@itsv.at");
$sender->Close();
}


##############################################################################
sub printcolor
##############################################################################
{
    my ($status,$message) = @_;
    
    if (-t STDOUT) {
        if ( $status =~ /ok/ig ) {
            print GREEN, "$message\n" ,RESET ;
        }
        elsif ( $status =~ /error|fail|failed/ig ) {
            print RED, "$message\n" ,RESET;
        }
        elsif ( $status =~ /warn/ig ) {
            print CYAN, "$message\n" ,RESET;
        }
        elsif( $status =~ /info/ig ) {
            print MAGENTA, "$message\n" ,RESET;
        }
    } else {
        print("$message \n");
    }
}


##############################################################################
sub dateCalcD
##############################################################################
{
    my $value = shift;
    ($year,$month,$day) = Add_N_Delta_YMD($year,$month,$day, 0,0,$value);
    $month = $month < 10 ? "0".$month : $month;
    $day = $day < 10 ? "0".$day : $day;
    print "$year$month$day\n";
}